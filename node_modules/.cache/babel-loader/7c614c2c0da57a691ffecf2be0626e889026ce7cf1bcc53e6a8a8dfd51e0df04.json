{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport DataSong from './MusicLibrary';\nconst initialStatedata = {\n  //初始化\n  currentSong: DataSong[0],\n  //当前默认播放音乐\n  playSongList: [\n  //播放列表\n  ...DataSong],\n  playSongIndex: 0,\n  //当前播放playSongList的index\n  playSongRule: 'loop' //播放规则。默认循环loop  单曲one 随机shuffle\n};\nconst playerSlice = createSlice({\n  name: 'player',\n  initialState: initialStatedata,\n  reducers: {\n    changeCurrentSongAction(state, {\n      payload\n    }) {\n      state.currentSong = payload;\n    },\n    changePlaySongIndexAction(state, {\n      payload\n    }) {\n      state.playSongIndex = payload;\n    },\n    changePlaySongListAction(state, {\n      payload\n    }) {\n      state.playSongList = payload;\n    },\n    changePlaySongRuleAction(state, {\n      payload\n    }) {\n      state.playSongRule = payload;\n    }\n  }\n});\nexport const {\n  changeCurrentSongAction,\n  changePlaySongIndexAction,\n  changePlaySongListAction,\n  changePlaySongRuleAction\n} = playerSlice.actions;\nexport default playerSlice.reducer;","map":{"version":3,"names":["createSlice","DataSong","initialStatedata","currentSong","playSongList","playSongIndex","playSongRule","playerSlice","name","initialState","reducers","changeCurrentSongAction","state","payload","changePlaySongIndexAction","changePlaySongListAction","changePlaySongRuleAction","actions","reducer"],"sources":["D:/Ceshi/music/src/components/Layout/FootPlay/store/player.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\nimport DataSong from './MusicLibrary'\r\n\r\nconst initialStatedata = {//初始化\r\n  currentSong: DataSong[0],//当前默认播放音乐\r\n  playSongList: [//播放列表\r\n    ...DataSong\r\n  ],\r\n  playSongIndex: 0,//当前播放playSongList的index\r\n  playSongRule: 'loop'//播放规则。默认循环loop  单曲one 随机shuffle\r\n}\r\n\r\nconst playerSlice = createSlice({\r\n  name: 'player',\r\n  initialState: initialStatedata,\r\n  reducers: {\r\n    changeCurrentSongAction (state, { payload }) {\r\n      state.currentSong = payload\r\n    },\r\n    changePlaySongIndexAction (state, { payload }) {\r\n      state.playSongIndex = payload\r\n    },\r\n    changePlaySongListAction (state, { payload }) {\r\n      state.playSongList = payload\r\n    },\r\n    changePlaySongRuleAction (state, { payload }) {\r\n      state.playSongRule = payload\r\n    }\r\n  }\r\n})\r\nexport const { changeCurrentSongAction, changePlaySongIndexAction, changePlaySongListAction, changePlaySongRuleAction } = playerSlice.actions;\r\nexport default playerSlice.reducer"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,QAAQ,MAAM,gBAAgB;AAErC,MAAMC,gBAAgB,GAAG;EAAC;EACxBC,WAAW,EAAEF,QAAQ,CAAC,CAAC,CAAC;EAAC;EACzBG,YAAY,EAAE;EAAC;EACb,GAAGH,QAAQ,CACZ;EACDI,aAAa,EAAE,CAAC;EAAC;EACjBC,YAAY,EAAE,MAAM;AACtB,CAAC;AAED,MAAMC,WAAW,GAAGP,WAAW,CAAC;EAC9BQ,IAAI,EAAE,QAAQ;EACdC,YAAY,EAAEP,gBAAgB;EAC9BQ,QAAQ,EAAE;IACRC,uBAAuBA,CAAEC,KAAK,EAAE;MAAEC;IAAQ,CAAC,EAAE;MAC3CD,KAAK,CAACT,WAAW,GAAGU,OAAO;IAC7B,CAAC;IACDC,yBAAyBA,CAAEF,KAAK,EAAE;MAAEC;IAAQ,CAAC,EAAE;MAC7CD,KAAK,CAACP,aAAa,GAAGQ,OAAO;IAC/B,CAAC;IACDE,wBAAwBA,CAAEH,KAAK,EAAE;MAAEC;IAAQ,CAAC,EAAE;MAC5CD,KAAK,CAACR,YAAY,GAAGS,OAAO;IAC9B,CAAC;IACDG,wBAAwBA,CAAEJ,KAAK,EAAE;MAAEC;IAAQ,CAAC,EAAE;MAC5CD,KAAK,CAACN,YAAY,GAAGO,OAAO;IAC9B;EACF;AACF,CAAC,CAAC;AACF,OAAO,MAAM;EAAEF,uBAAuB;EAAEG,yBAAyB;EAAEC,wBAAwB;EAAEC;AAAyB,CAAC,GAAGT,WAAW,CAACU,OAAO;AAC7I,eAAeV,WAAW,CAACW,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}