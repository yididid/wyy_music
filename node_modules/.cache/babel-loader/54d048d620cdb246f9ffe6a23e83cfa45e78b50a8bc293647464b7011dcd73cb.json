{"ast":null,"code":"import service from \"../service\";\n\n//login post\nexport function RequestPost(url, data) {\n  return new Promise((resolve, reject) => {\n    service.post(url, data).then(res => resolve(res)).catch(error => reject(error));\n  });\n}\n//login get\n_c = RequestPost;\nexport function RequestGet(url, params) {\n  return new Promise((resolve, reject) => {\n    service.get(url, {\n      params\n    }).then(res => resolve(res)).catch(error => reject(error));\n  });\n}\n_c2 = RequestGet;\nvar _c, _c2;\n$RefreshReg$(_c, \"RequestPost\");\n$RefreshReg$(_c2, \"RequestGet\");","map":{"version":3,"names":["service","RequestPost","url","data","Promise","resolve","reject","post","then","res","catch","error","_c","RequestGet","params","get","_c2","$RefreshReg$"],"sources":["D:/Ceshi/music/src/request/api/login.js"],"sourcesContent":["import service from \"../service\";\r\n\r\n//login post\r\nexport function RequestPost(url,data){\r\n  return new Promise((resolve,reject)=>{\r\n    service.post(url,data).then(res=>resolve(res))\r\n    .catch(error=>reject(error))\r\n  })\r\n}\r\n//login get\r\nexport function RequestGet(url,params){\r\n  return new Promise((resolve,reject)=>{\r\n    service.get(url,{\r\n      params\r\n    }).then(res=>resolve(res))\r\n    .catch(error=>reject(error))\r\n  })\r\n}"],"mappings":"AAAA,OAAOA,OAAO,MAAM,YAAY;;AAEhC;AACA,OAAO,SAASC,WAAWA,CAACC,GAAG,EAACC,IAAI,EAAC;EACnC,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAACC,MAAM,KAAG;IACnCN,OAAO,CAACO,IAAI,CAACL,GAAG,EAACC,IAAI,CAAC,CAACK,IAAI,CAACC,GAAG,IAAEJ,OAAO,CAACI,GAAG,CAAC,CAAC,CAC7CC,KAAK,CAACC,KAAK,IAAEL,MAAM,CAACK,KAAK,CAAC,CAAC;EAC9B,CAAC,CAAC;AACJ;AACA;AAAAC,EAAA,GANgBX,WAAW;AAO3B,OAAO,SAASY,UAAUA,CAACX,GAAG,EAACY,MAAM,EAAC;EACpC,OAAO,IAAIV,OAAO,CAAC,CAACC,OAAO,EAACC,MAAM,KAAG;IACnCN,OAAO,CAACe,GAAG,CAACb,GAAG,EAAC;MACdY;IACF,CAAC,CAAC,CAACN,IAAI,CAACC,GAAG,IAAEJ,OAAO,CAACI,GAAG,CAAC,CAAC,CACzBC,KAAK,CAACC,KAAK,IAAEL,MAAM,CAACK,KAAK,CAAC,CAAC;EAC9B,CAAC,CAAC;AACJ;AAACK,GAAA,GAPeH,UAAU;AAAA,IAAAD,EAAA,EAAAI,GAAA;AAAAC,YAAA,CAAAL,EAAA;AAAAK,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}